 - name: Get my current IP address
   uri:
     url: http://checkip.amazonaws.com/
     return_content: yes
   register: my_ip

#- name: Create simple security group
#  ec2_group:
#    name: webservers
#    description: A security group for my current IP
#    region: us-west-1
#    rules:
#      - proto: tcp
#        from_port: 80
#        to_port: 80
#        cidr_ip: "{{ my_ip.content | replace('\n', '') }}/32"
#      - proto: tcp
#        from_port: 22
#        to_port: 22
#        cidr_ip: "{{ my_ip.content | replace('\n', '') }}/32"
#    rules_egress:
#      - proto: tcp
#        from_port: 80
#        to_port: 80
#        cidr_ip: 0.0.0.0/0
#  register: webservers_group

 - name: Create EC2 instances
   ec2:
     key_name: "{{ ec2_keypair }}"
     group_id: "{{ ec2_security_group }}"
     instance_type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     vpc_subnet_id: "{{ ec2_subnet_ids|random }}"
     region: "{{ ec2_region }}"
     instance_tags: '{"Name":"{{ec2_tag_Name}}","Type":"{{ec2_tag_Type}}"}'
     exact_count: 1
     count_tag:
       Type: "{{ec2_tag_Type}}"
     wait_timeout: 500
     volumes:
       - device_name: /dev/xvda
         volume_type: gp2
         volume_size: "{{ ec2_volume_size }}"
         delete_on_termination: true
     assign_public_ip: yes
     wait: yes
   register: ec2_instances

 - name: Store EC2 instance IPs to provision against
   add_host:
     hostname: "{{ item.public_ip }}"
     groupname: ec2_instance_ips
   with_items: "{{ ec2_instances.tagged_instances }}"

 - name: Wait for servers to come online
   wait_for:
     host: "{{ item.public_ip }}"
     port: 22
     timeout: 180
   with_items: "{{ ec2_instances.tagged_instances }}"

 - name: Add EC2 instances as known hosts
   known_hosts:
     name: "{{ item.public_ip }}"
     key: "{{ lookup('pipe', 'ssh-keyscan -t rsa ' + item.public_ip) }}"
   with_items: "{{ ec2_instances.tagged_instances }}"
#
# - name: Format and mount filesystem
#   hosts: ec2_instance_ips
#   remote_user: ubuntu
#   become: True
#   filesystem: fstype=ext4 dev=/dev/xvdf #opts="-cc" or /dev/sdf? #seems that the device /dev/sdf gets renamed to /dev/xvdf
#   mount: name=/mnt src=/dev/xvdf fstype=ext4 state=mounted
